{"mappings":"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","sources":["src/modules/index.ts"],"sourcesContent":["// Get the DOM elements\nconst imageSelection = document.getElementById(\"image-selection\") as HTMLSelectElement | null;\nconst loggedInUsersList = document.getElementById(\"logged-in-users\") as HTMLUListElement | null;\nconst createAccountButton = document.getElementById(\"create-account-button\") as HTMLButtonElement | null;\nconst submitButton = document.getElementById(\"submit-button\") as HTMLButtonElement | null;\nconst usernameInput = document.getElementById(\"username\") as HTMLInputElement | null;\nconst passwordInput = document.getElementById(\"password\") as HTMLInputElement | null;\nconst form = document.getElementById('form') as HTMLFormElement | null;\nconst errorMessage = document.createElement(\"p\");\nconst userDeletedSuccessfully = document.createElement('h1');\nconst failedToDeleteUser = document.createElement('h1');\nconst messageInput = document.createElement('input');\nconst listItem = document.createElement(\"li\");\nconst body = document.getElementById('body') as HTMLBodyElement;\nconst accountCreated = document.createElement(\"h1\");\nconst logInpage = document.createElement('div');\nlet loggedInUser = null; // Declare loggedInUser variable\n\n\nconst container = document.createElement('div');\ncontainer.style.display = \"flex\";\ncontainer.style.justifyContent = \"center\";\n\n// Define the interfaces\ninterface UserInfo {\n    userName: any;\n    password: string;\n    status: string;\n    imageurl: string;\n    newUser: boolean;\n}\n\ninterface FirebaseResponse {\n    [key: string]: UserInfo;\n}\n\n// Define the base URL\nconst baseUrl = \"https://social-media-68d76-default-rtdb.europe-west1.firebasedatabase.app/\";\n\n//Define the function to get the users\nasync function getUsers(): Promise<UserInfo[]> {\n    try {\n        const response = await fetch(`${baseUrl}users.json`);\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n        const users: FirebaseResponse | null = await response.json();\n        if (!users) {\n\n            return [];\n        }\n\n\n        const usersArray: UserInfo[] = Object.values(users);\n        return usersArray;\n    } catch (err) {\n        throw new Error(\"Failed to fetch users\");\n    }\n}\n\n\n//uppdate the users array - Define the function to save a user\nasync function saveUser(user: UserInfo): Promise<void> {\n\n    const arrData = await getUsers();\n    const url = `${baseUrl}users/${user.userName}.json`;\n    const init = {\n        method: \"PUT\",\n        body: JSON.stringify(user),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n        },\n    };\n\n    try {\n        const response = await fetch(url, init);\n\n        if (!response.ok) {\n            throw new Error(`Error: ${response.status} ${response.statusText}`);\n        }\n    } catch (err) {\n        console.log(err);\n        throw new Error(\"Failed to save user information.\");\n    }\n}\n\n\n//Event listener for the \"image dropdown\"\nif (imageSelection) {\n    imageSelection.addEventListener(\"change\", () => {\n        const selectedImageUrl = imageSelection.value;\n        imageSelection.value = selectedImageUrl;\n    });\n} else {\n    console.error(\"Image dropdown element not found.\");\n}\n\n// Event listener for the \"create account\" button\nif (createAccountButton && usernameInput && passwordInput) {\n    createAccountButton.addEventListener(\"click\", async () => {\n        userDeletedSuccessfully.textContent = \" \";\n        errorMessage.innerText = \" \";\n        const userName = usernameInput.value;\n        const password = passwordInput.value;\n\n\n\n        if (!userName || !password) {\n            errorMessage.textContent = \"Username and / or password cannot be empty.\";\n            errorMessage.style.color = \"red\";\n            createAccountButton.insertAdjacentElement(\"afterend\", errorMessage);\n            return;\n        }\n\n        //check if username is available\n        const isAvailable = await isUsernameAvailable(userName);\n\n\n        if (!isAvailable) {\n            errorMessage.textContent = \"Username is already taken. Please choose another one.\";\n            errorMessage.style.color = \"red\";\n            createAccountButton.insertAdjacentElement(\"afterend\", errorMessage);\n            return;\n        }\n\n        body.appendChild(accountCreated);\n        accountCreated.textContent = \"Your account has been successfully created! You may now log in with your new account.\";\n\n\n\n        const userInfo: UserInfo = {\n            userName: userName,\n            password: password,\n            status: \"\",\n            imageurl: imageSelection?.value ?? \"\",\n            newUser: true,\n        };\n\n        await saveUser(userInfo);\n    });\n} else {\n    console.error(\"One or more DOM elements not found.\");\n}\n\n\n//control already existing users\nasync function isUsernameAvailable(username: string): Promise<boolean> {\n    const users = await getUsers();\n    //checks if there's any user in the array with the same username using the some() method.\n    return !users.some((user) => user.userName === username);\n}\n\n// Displaying already logged in users\nfunction displayLoggedInUsers(users: UserInfo[]): void {\n    if (!loggedInUsersList) {\n        console.error(\"Logged-in users list element not found.\");\n        return;\n    }\n\n    loggedInUsersList.innerHTML = \"\";\n\n    for (const user of users) {\n        if (!user.newUser) {\n            const listItem = document.createElement(\"li\");\n            listItem.textContent = `${user.userName} - Status: ${user.status}`;\n\n            // Create an img element and set its src attribute to the user's image URL\n            const userImage = document.createElement(\"img\");\n            userImage.src = user.imageurl;\n            userImage.style.width = \"50px\";\n            userImage.style.height = \"50px\";\n\n            // Append the img element to the list item\n            listItem.appendChild(userImage);\n            loggedInUsersList.appendChild(listItem);\n\n         \n\n\n            // Event listener to the list item\n            listItem.addEventListener(\"click\", () => {\n                document.body.innerHTML = \"\";\n                form!.style.display = \"none\";\n                const usersPage = document.createElement('div');\n                usersPage.innerHTML = `<h1>Welcome to ${user.userName}'s page! </br> Status: ${user.status}</h1>`;\n                document.body.appendChild(usersPage);\n\n                // Create an img element and set its src attribute to the user's image URL\n                const userImage = document.createElement(\"img\");\n                userImage.src = user.imageurl;\n                userImage.style.width = \"50px\";\n                userImage.style.height = \"50px\";\n                userImage.style.alignItems = \"center\";\n                usersPage.appendChild(userImage);\n\n                //Log out button to log out user and take user back to login page with username input and password input but with the user still registred in the database\n                const logOutButton = document.createElement('button');\n\n                logOutButton.textContent = \"Log Out\";\n                logOutButton.style.textAlign = \"center\";\n                logOutButton.style.margin = \"10px\";\n\n                document.body.appendChild(logOutButton);\n                logOutButton.addEventListener(\"click\", backToMainPage);\n                function backToMainPage() {\n                    //takes away the logged in page and back to the login page\n                    messageInput.style.display = \"none\";\n                    logInpage.innerHTML = \"\";\n                    logOutButton!.style.display = \"none\";\n                    userDeletedSuccessfully.textContent = \" \"\n                    form!.style.display = \"block\";\n                    // usernameInput!.value =\"\";\n                    passwordInput!.value = \"\";\n                    errorMessage.textContent = \" \";\n                    logInpage!.style.display = \"none\";\n                    loggedInUsersList!.style.display = \"none\";\n                    window.location.reload();\n                }\n\n\n            });\n        }\n    }\n}\n\n// Event listener for the \"submit\" button\nif (submitButton && usernameInput && passwordInput) {\n    submitButton.addEventListener(\"click\", async (event: MouseEvent) => {\n        event.preventDefault();\n        accountCreated.textContent = \" \";\n        userDeletedSuccessfully.textContent = \" \";\n        document.body.style.alignContent = \"center\";\n        // Remove error message if it exists\n        errorMessage.textContent = \" \";\n        const password = passwordInput.value;\n        const users = await getUsers();\n        const user = users.find((u) => u.userName === usernameInput.value);\n        errorMessage.textContent = \"Log In Successfull! \";\n\n\n        //if no user is found\n        if (!user) {\n            errorMessage.textContent = \"No account found for this user. Please create an account first.\";\n            errorMessage.style.color = \"red\";\n            form?.appendChild(errorMessage);\n            return;\n        }\n\n        //password check\n        if (user.password !== password) {\n            errorMessage.textContent = \"Incorrect password. Please try again.\";\n            errorMessage.style.color = \"red\";\n            form?.appendChild(errorMessage);\n            return;\n        }\n\n        if (!loggedInUsersList) {\n            console.error(\"Logged-in users list element not found.\");\n            return;\n        }\n\n        loggedInUsersList.innerHTML = \"\";\n\n        for (const user of users) {\n            if (!user.newUser) {\n                document.body.innerHTML = \"\";\n\n                // Event listener to the list item\n                listItem.addEventListener(\"click\", () => {\n\n                    document.body.innerHTML = \"\";\n                    form!.style.display = \"none\";\n                    const usersPage = document.createElement('div');\n                    usersPage.innerHTML = `<h1>Welcome to ${user.userName}'s page! </br> Status: ${user.status}</h1>`;\n                    document.body.appendChild(usersPage);\n                    document.body.style.alignContent = \"center\";\n\n                    // Create an img element and set its src attribute to the user's image URL\n                    const userImage = document.createElement(\"img\");\n                    userImage.src = user.imageurl;\n                    userImage.style.width = \"50px\";\n                    userImage.style.height = \"50px\";\n                    usersPage.appendChild(userImage);\n\n                    //Log out button to log out user and take user back to login page with username input and password input but with the user still registred in the database\n                    const logOutButton = document.createElement('button');\n                    logOutButton.textContent = \"Log Out\";\n                    document.body.appendChild(logOutButton);\n                    logOutButton.addEventListener(\"click\", backToMainPage);\n                    function backToMainPage() {\n                        //takes away the logged in page and back to the login page\n                        messageInput.style.display = \"none\";\n                        logInpage.innerHTML = \"\";\n\n                        logOutButton!.style.display = \"none\";\n\n                        userDeletedSuccessfully.textContent = \" \"\n                        form!.style.display = \"block\";\n                        // usernameInput!.value =\"\";\n                        passwordInput!.value = \"\";\n                        errorMessage.textContent = \" \";\n                        logInpage!.style.display = \"none\";\n                        loggedInUsersList!.style.display = \"none\";\n                        window.location.reload();\n                    }\n\n\n                });\n            }\n        }\n\n        //--------------------------STATUS WALL FOR ALL USERS--------------------------//\n        // Update the user's status\n        user.newUser = false;\n        await saveUser(user);\n\n        // Display logged-in users\n        displayLoggedInUsers(await getUsers());\n\n\n        //Log in div for when the user is logged in, all statusmessages shown here\n        form!.style.display = \"none\";\n\n        // const logInpage = document.createElement('div');\n        logInpage.innerHTML = `<h1>Welcome ${usernameInput.value}!</h1> `;\n        logInpage.style.textAlign = \"center\";\n        document.body.appendChild(logInpage);\n        logInpage.appendChild(loggedInUsersList!)\n        loggedInUsersList!.style.display = \"block\";\n        messageInput.style.display = \"block\";\n        messageInput.value = \"\";\n        messageInput.id = \"status\";\n        document.body.appendChild(messageInput);\n        messageInput.style.width = \"100px\";\n        const sendMessageButton = document.createElement('button');\n        sendMessageButton.innerText = \"Send statusmessage! \"\n        sendMessageButton.style.width = \"120px\";\n        sendMessageButton.style.textAlign = \"center\";\n        sendMessageButton.style.margin = \"10px\";\n        container.appendChild(sendMessageButton);\n        document.body.appendChild(container);;\n\n        const deleteButton2 = document.createElement('button');\n        deleteButton2.innerText = \"Delete User\";\n        deleteButton2.style.textAlign = \"center\";\n        deleteButton2.style.margin = \"10px\";\n        deleteButton2.style.width = \"120px\";\n        container.appendChild(deleteButton2);\n        document.body.appendChild(container);\n\n\n\n        deleteButton2?.addEventListener(\"click\", async (event) => {\n            event?.preventDefault();\n            listItem.textContent = \" \";\n            if (usernameInput) {\n                await deleteUser(usernameInput.value);\n                errorMessage.textContent = \" \";\n            } else {\n                console.error(\"Username input element not found.\");\n            }\n        });\n\n        async function deleteUser(username: string): Promise<void> {\n            console.log(\"Deleting user\");\n            const url = `${baseUrl}users/${username}.json`;\n            const init = {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                },\n            };\n\n            try {\n                const response = await fetch(url, init);\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\n                }\n                console.log(\"User deleted successfully\");\n                userDeletedSuccessfully.textContent = \"User deleted successfully!\"\n                document.body.appendChild(userDeletedSuccessfully);\n\n\n                // Display logged-in users\n                displayLoggedInUsers(await getUsers());\n\n                //takes away the logged in page and back to the login page\n                messageInput.style.display = \"none\";\n                logInpage.innerHTML = \"\";\n                sendMessageButton.style.display = \"none\";\n                logOutButton!.style.display = \"none\";\n                deleteButton2!.style.display = \"none\";\n                userDeletedSuccessfully.textContent = \" \"\n                form!.style.display = \"block\";\n                // usernameInput!.value =\"\";\n                passwordInput!.value = \"\";\n                errorMessage.textContent = \" \";\n                logInpage!.style.display = \"none\";\n                loggedInUsersList!.style.display = \"none\";\n\n            } catch (err) {\n                console.log(err);\n                failedToDeleteUser.textContent = \"Failed to delete user. Please try again.\";\n                document.body.appendChild(failedToDeleteUser);\n                throw new Error(\"Failed to delete user.\");\n            }\n        }\n\n\n        //event listener for button to send statusmessage\n        sendMessageButton.addEventListener(\"click\", async () => {\n            const status = messageInput.value;\n            //PROBLEM HÄR!!!!!!!!!!! FUNKAR nu? TEST JAAAAA det funkar jag är ett fucking geni.(oftast inte. Bara ibland. som här)\n            const url = `${baseUrl}users/${user.userName}/status.json`;\n            const init = {\n                method: \"PUT\",\n                body: JSON.stringify(status),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                },\n            };\n            try {\n                const response = await fetch(url, init);\n\n                if (!response.ok) {\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\n                }\n            } catch (err) {\n                console.log(err);\n                throw new Error(\"Failed to save user information.\");\n            }\n\n            // Display logged-in users\n            displayLoggedInUsers(await getUsers());\n            messageInput.value = \"\";\n        });\n\n        //Log out button to log out user and take user back to login page with username input and password input but with the user still registred in the database\n        const logOutButton = document.createElement('button');\n        logOutButton.textContent = \"Log Out\";\n        logOutButton.style.textAlign = \"center\";\n        logOutButton.style.margin = \"10px\";\n        logOutButton.style.width = \"80px\";\n        container.appendChild(logOutButton);\n        document.body.appendChild(container);\n        logOutButton.addEventListener(\"click\", backToMainPage);\n        function backToMainPage() {\n            //takes away the logged in page and back to the login page\n            messageInput.style.display = \"none\";\n            logInpage.innerHTML = \"\";\n            sendMessageButton.style.display = \"none\";\n            logOutButton!.style.display = \"none\";\n            deleteButton2!.style.display = \"none\";\n            userDeletedSuccessfully.textContent = \" \"\n            form!.style.display = \"block\";\n            // usernameInput!.value =\"\";\n            passwordInput!.value = \"\";\n            errorMessage.textContent = \" \";\n            logInpage!.style.display = \"none\";\n            loggedInUsersList!.style.display = \"none\";\n            window.location.reload();\n        }\n\n    });\n} else {\n    console.error(\"One or more DOM elements not found.\");\n}\n\n\n"],"names":["$f9b32f98613e0134$var$imageSelection","document","getElementById","$f9b32f98613e0134$var$loggedInUsersList","$f9b32f98613e0134$var$createAccountButton","$f9b32f98613e0134$var$submitButton","$f9b32f98613e0134$var$usernameInput","$f9b32f98613e0134$var$passwordInput","$f9b32f98613e0134$var$form","$f9b32f98613e0134$var$errorMessage","createElement","$f9b32f98613e0134$var$userDeletedSuccessfully","$f9b32f98613e0134$var$failedToDeleteUser","$f9b32f98613e0134$var$messageInput","$f9b32f98613e0134$var$listItem","$f9b32f98613e0134$var$body","$f9b32f98613e0134$var$accountCreated","$f9b32f98613e0134$var$logInpage","$f9b32f98613e0134$var$container","style","display","justifyContent","$f9b32f98613e0134$var$baseUrl","async","$f9b32f98613e0134$var$getUsers","response","fetch","ok","Error","status","statusText","users","json","Object","values","err","$f9b32f98613e0134$var$saveUser","user","url","userName","init","method","body","JSON","stringify","headers","console","log","$f9b32f98613e0134$var$displayLoggedInUsers","innerHTML","newUser","listItem","textContent","userImage","src","imageurl","width","height","appendChild","addEventListener","usersPage","alignItems","logOutButton","textAlign","margin","value","window","location","reload","error","selectedImageUrl","innerText","password","color","insertAdjacentElement","username","some","$f9b32f98613e0134$var$isUsernameAvailable","userInfo","event","preventDefault","alignContent","find","u","id","sendMessageButton","deleteButton2","deleteUser"],"version":3,"file":"index.50ee0eea.js.map"}